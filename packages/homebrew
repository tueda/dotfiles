HOMEBREW_REPO_ROOT=https://github.com/Homebrew

case $osname in
  osx)
    prefix=/usr/local
    pkgname=homebrew
    ;;
  linux)
    HOMEBREW_REPO_ROOT=https://github.com/Linuxbrew
    prefix="$HOME/.linuxbrew"
    pkgname=linuxbrew
    ;;
  *)
    prefix=$HOME/homebrew
    pkgname=homebrew
    ;;
esac

if [ -n "$LOCAL_BUILD_ROOT" ]; then
  prefix="$LOCAL_BUILD_ROOT/$pkgname"
fi

do_install() {
  if type git >/dev/null 2>&1; then :; else
    echo "error: git required" >&2
    return 1
  fi

  case $osname in
    osx)
      # TODO
      echo "error: $osname unsupported" >&2
      return 1
      ;;
  esac

  git clone $HOMEBREW_REPO_ROOT/brew "$prefix" --depth=1

  # Patches for old git.
  sed -i 's/ --config core.autocrlf=false//' \
    "$prefix/Library/Homebrew/tap.rb"
  sed -i 's/"git", "config", "--local"/"git", "config"/' \
    "$prefix/Library/Homebrew/tap.rb"

  export HOMEBREW_BUILD_FROM_SOURCE=1
  export HOMEBREW_NO_ANALYTICS=1

  for cc in gcc g++ gfortran; do
    src=/usr/bin/$cc
    if [ -f "$src" ]; then
      ver=`dump_version "$src"`
      case $ver in
        4.1)
          ver=4.2  # hack
          ;;
      esac
      dst=$prefix/bin/$cc-$ver
      if [ -e "$dst" ] || [ -h "$dst" ]; :; then
        ln -s $src $dst
      fi
    fi
  done

  export PATH="$prefix/bin:$PATH"
  brew doctor || :
  brew install hello && brew test hello || :; brew remove hello || :
}

do_postinstall() {
  rc_set_path HOMEBREW_PREFIX "$prefix"
  rc_set_path HOMEBREW_CACHE '$HOMEBREW_PREFIX/Cache'
  rc_set_path HOMEBREW_LOGS '$HOMEBREW_PREFIX/Logs'
  rc_set_path HOMEBREW_BUILD_FROM_SOURCE 1
  rc_set_path HOMEBREW_NO_ANALYTICS 1
  rc_set_path HOMEBREW_NO_EMOJI 1

  rc_prepend_path PATH '$HOMEBREW_PREFIX/bin'
  rc_prepend_path MANPATH '$HOMEBREW_PREFIX/share/man'
  rc_prepend_path INFOPATH '$HOMEBREW_PREFIX/share/info'

  rc_if '[ -f "$HOMEBREW_PREFIX/bin/rbenv" ]'
    rc_set_path RBENV_ROOT '$HOMEBREW_PREFIX/var/rbenv'
    rc_eval_cmd 'rbenv init - --no-rehash'
  rc_fi

  rc_if '[ -f "$HOMEBREW_PREFIX/bin/pyenv" ]'
    rc_set_path PYENV_ROOT '$HOMEBREW_PREFIX/var/pyenv'
    rc_eval_cmd 'pyenv init - --no-rehash'
    rc_if '[ -f "$HOMEBREW_PREFIX/bin/pyenv-virtualenv-init" ]'
      rc_eval_cmd 'pyenv virtualenv-init -'
    rc_fi
  rc_fi

  rc_if '[ -f "$HOMEBREW_PREFIX/bin/plenv" ]'
    rc_set_path PLENV_ROOT '$HOMEBREW_PREFIX/var/plenv'
    rc_eval_cmd 'plenv init - --no-rehash'
  rc_fi

  rc_if '[ -f "$HOMEBREW_PREFIX/bin/opam" ]'
    rc_set_path OPAMROOT '$HOMEBREW_PREFIX/var/opam'
    rc_if '[ -f "$HOMEBREW_PREFIX/var/opam/config" ]'
      rc_eval_cmd 'opam config env'
    rc_fi
  rc_fi

  rc_if '[ -d "$HOMEBREW_PREFIX/share/rust/rust_src" ]'
    rc_set_path RUST_SRC_PATH '$HOMEBREW_PREFIX/share/rust/rust_src'
  rc_fi
  rc_if '[ -f "$HOMEBREW_PREFIX/bin/cargo" ]'
    rc_set_path CARGO_HOME '$HOMEBREW_PREFIX/var/cargo'
    rc_prepend_path PATH '$HOMEBREW_PREFIX/var/cargo/bin'
  rc_fi

  rc_if '[ -d "$HOMEBREW_PREFIX/share/form" ]'
    rc_append_path FORMPATH '$HOMEBREW_PREFIX/share/form'
  rc_fi
}

dump_version() {
  # Note that old versions of gfortran have bug in -dumpversion.
  # https://gcc.gnu.org/bugzilla/show_bug.cgi?id=41080
  $1 -dumpversion | head -1 | sed 's/[^0-9]*\([0-9][0-9]*\.[0-9][0-9]*\).*/\1/'
}

# vim: ft=sh et ts=8 sts=2 sw=2
