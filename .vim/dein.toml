[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'altercation/vim-colors-solarized'
hook_add = '''
  let g:solarized_termcolors = &t_Co
  let g:solarized_termtrans = 1
  let g:solarized_visibility = "low"
  autocmd vimrc VimEnter * nested colorscheme solarized | highlight link ExtraWhitespace Visual | highlight SpellBad cterm=underline ctermbg=224
'''

[[plugins]]
repo = 'bling/vim-bufferline'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
  set   laststatus=2
  set noshowmode
  if !exists('g:airline_symbols')
    let g:airline_symbols = {}
  endif
  let g:airline_symbols.linenr = '|'
  let g:airline_symbols.maxlinenr = ''
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Konfekt/FastFold'

[[plugins]]
repo = 'kopischke/vim-stay'
hook_add = '''
  setlocal viewoptions=cursor,folds,options,slash,unix
'''

#[[plugins]]
#repo = 'dietsche/vim-lastplace'
#hook_add = '''
#  let g:lastplace_ignore = 'gitcommit,gitrebase,svn,hgcommit'
#'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  " Open a NERDTree on opening a directory.
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | wincmd p | endif
  " Close Vim when a NERDTree is the only window left open.
  autocmd BufEnter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
  " Ignore cache, etc.
  let g:NERDTreeIgnore = [
    \ '\.egg-info$',
    \ '\.o$' ,
    \ '\.pyc$' ,
    \ '\.pyo$' ,
    \ '^__pycache__$' ,
    \ '^CMakeCache\.txt$',
    \ '^CMakeFiles$',
    \ '^cmake_install\.cmake$',
    \ '^CTestTestfile\.cmake$',
    \ '^Testing$',
    \ '^gradlew$',
    \ '^gradlew\.bat$',
    \ '-eps-converted-to\.pdf$' ,
    \ '\~$' ]
'''

[[plugins]]
#repo = 'ConradIrwin/vim-bracketed-paste'
repo = 'redneb/vim-bracketed-paste'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'

[[plugins]]
repo = 'haya14busa/incsearch.vim'
hook_add = '''
  map /  <Plug>(incsearch-forward)
  map ?  <Plug>(incsearch-backward)
  map g/ <Plug>(incsearch-stay)
'''

[[plugins]]
repo = 'osyo-manga/vim-anzu'
hook_add = '''
  nmap n <Plug>(anzu-n-with-echo)
  nmap N <Plug>(anzu-N-with-echo)
  nmap * <Plug>(anzu-star-with-echo)
  nmap # <Plug>(anzu-sharp-with-echo)
'''

[[plugins]]
repo = 'vim-scripts/YankRing.vim'
hook_add = '''
  let g:yankring_history_file = ".yankring_history"
'''
if = "!has('nvim')"  # clipboard error with nvim
